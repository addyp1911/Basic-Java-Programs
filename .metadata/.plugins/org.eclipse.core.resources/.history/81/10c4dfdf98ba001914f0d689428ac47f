package practice;

import java.util.Arrays;
import java.util.Deque;
import java.util.LinkedList;
import java.util.Queue;

import practice.MyList.Node;

public class Example {


		public static boolean isPalindrome(String word) {
		    boolean isPalindrome = word.length() == 1;
		    if (!isPalindrome) {
		        Deque<Character> wordDeque = new LinkedList<>();
		        for (Character c : word.toCharArray()) {
		            wordDeque.add(Character.toLowerCase(c));
		        }
		        isPalindrome = true;
		        while (isPalindrome && wordDeque.size() > 1) {
		            isPalindrome = wordDeque.pollFirst().compareTo(wordDeque.pollLast()) == 0;
		        }
		    }
		    return isPalindrome;
		}
	
	
	 public static void main(String[] args) {
		
	
	boolean rs=isPalindrome("madam");
	
	
}
}
